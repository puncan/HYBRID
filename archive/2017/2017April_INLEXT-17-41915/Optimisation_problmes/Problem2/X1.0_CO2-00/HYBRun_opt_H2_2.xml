<Simulation verbosity="debug">
  <RunInfo>
    <WorkingDir>2.0</WorkingDir>
    <Sequence>read_ARMAprice,OPTrun,printTOfile</Sequence>
   <!-- <batchSize>24</batchSize>
    <internalParallel>True</internalParallel> 
    -->
    <!-- <NumThreads>1</NumThreads> -->
    <!-- <NumMPI>10</NumMPI> -->
  </RunInfo>

  <Files>
    <Input name="f_ARMAprice" type="">ARMA_P.pk</Input>
  </Files>

  <VariableGroups>
    <Group name="GRO_getCapacities_in_scalar">
      CAPEX_tot,
      CAPEX_split,
      IP_econo_of_scale
    </Group>
    <Group name="GRO_getCapacities_out_scalar">
      BOP_capacity, IP_capacity
    </Group>
    <Group name="GRO_dispatch_in_scalar">
      PriceH2,
      BOP_capacity,
      IP_capacity
    </Group>
    <Group name="GRO_dispatch_in_Time">
      Price
    </Group>
    <Group name="GRO_dispatch_out_Time">
      BOP_DYMO_productionEL, BOP_DYMO_productionBY, 
      IP_DYMO_productionEL,  IP_DYMO_productionBY 
    </Group>
    <Group name="GRO_CashFlowPreP_in_scalar">
      BOP_capacity, PriceH2,
      IP_capacity
    </Group>
    <Group name="GRO_CashFlowPreP_in_Time">
      BOP_DYMO_productionEL, Price,
      IP_DYMO_productionBY, IP_DYMO_productionEL
    </Group>
    <Group name="GRO_CashFlowPreP_out_scalar">
      BOP_TOT_revenueEL,
      IP_TOT_revenueBY,
      IP_TOT_productionBY,
      IP_TOT_costEL,
      IP_TOT_usedEL,
      IPOMfix,
      IP_capa_fact,
      BOP_capa_fact
    </Group> 
    <Group name="GRO_CashFlow_in_scalar" >
      BOP_capacity,
      BOP_TOT_revenueEL,
      IP_capacity,
      IP_TOT_revenueBY,
      IP_TOT_productionBY,
      IP_TOT_costEL,
      IPOMfix,
      IP_TOT_usedEL
    </Group> 
    <Group name="GRO_CashFlow_out_scalar" >IRR, NPV, PI</Group>
  </VariableGroups>

  <Models>
    <ROM name='ARMA_price' subType='pickledROM'/>
    <ExternalModel ModuleToLoad="../../../../src/getCapacities.py" name="getCapacities" subType="">
      <variables>GRO_getCapacities_in_scalar, GRO_getCapacities_out_scalar</variables>
    </ExternalModel>
    <ExternalModel ModuleToLoad="../../../../src/dispatch_2017April.py" name="dispatch" subType="">
      <variables>GRO_dispatch_in_scalar, GRO_dispatch_in_Time, GRO_dispatch_out_Time</variables>
      <!-- External XML node -->
      <Dispatch verbosity="0"> <!-- “0” all debug output, “1” some output, “100” only errors  -->
        
      </Dispatch>
    </ExternalModel>
    <ExternalModel ModuleToLoad="../../../../src/CasFlowPreP_2017April.py" name="CashFlowPreP" subType="">
      <variables>GRO_CashFlowPreP_in_scalar, GRO_CashFlowPreP_in_Time, GRO_CashFlowPreP_out_scalar</variables>
      <!-- External XML node -->
      <NPVPreP verbosity="0"> <!-- “0” all debug output, “1” some output, “100” only errors  -->
        
      </NPVPreP>
    </ExternalModel>
    <ExternalModel name="Cash_Flow" subType="CashFlow">
      <variables>GRO_CashFlow_in_scalar, GRO_CashFlow_out_scalar</variables>
      <ExternalXML node="Economics" xmlToLoad="../../Cash_Flow_input.xml"/>
    </ExternalModel>

    <EnsembleModel name="MyEnsemble" subType="">
      <Model class="Models" type="ROM">
        ARMA_price
        <Input            class="DataObjects" type="PointSet">SET_ARMAprice_in</Input>
        <TargetEvaluation class="DataObjects" type="HistorySet">SET_ARMAprice_out</TargetEvaluation>
      </Model>
      <Model class="Models" type="ExternalModel">
        getCapacities
        <Input            class="DataObjects" type="PointSet">SET_getCapacities_in</Input>
        <TargetEvaluation class="DataObjects" type="PointSet">SET_getCapacities_out</TargetEvaluation>
      </Model>
      <Model class="Models" type="ExternalModel">
        dispatch
        <Input            class="DataObjects" type="PointSet">SET_dispatch_in</Input>
        <TargetEvaluation class="DataObjects" type="DataSet" >SET_dispatch_out</TargetEvaluation>
      </Model>
      <Model class="Models" type="ExternalModel">
        CashFlowPreP
        <Input            class="DataObjects" type="PointSet">SET_CashFlowPreP_in</Input>
        <TargetEvaluation class="DataObjects" type="DataSet" >SET_CashFlowPreP_out</TargetEvaluation>
      </Model>
      <Model class="Models" type="ExternalModel">
        Cash_Flow
        <Input            class="DataObjects" type="PointSet">SET_CashFlow_in</Input>
        <TargetEvaluation class="DataObjects" type="PointSet">SET_CashFlow_out</TargetEvaluation>
      </Model>
    </EnsembleModel>
  </Models>

  <Distributions>
    <Uniform name="CAPEX_tot_distrib">
      <!-- ip and nuc capex total: 300mwe nuc ( (300/1100)^0.64 * 4.51e9 = 1.96355e9 $)   + 8x300/eff (8*300/0.31~8000MW)   mw ip (to see the inflection)  (8000/231)^0.64 * 153e6  = 1479e6)   -->
      <upperBound>3e10</upperBound>   <!-- combined capex in $ -->
      <lowerBound>0</lowerBound> 
    </Uniform>
    <Uniform name="CAPEX_split_distrib">
      <upperBound>1</upperBound> 
      <lowerBound>0</lowerBound> 
    </Uniform>
    <Uniform name="PriceH2_distrib">
      <upperBound>3.0</upperBound>   <!-- $/kg -->
      <lowerBound>1.0</lowerBound>   <!-- $/kg -->
    </Uniform>
  </Distributions>

  <DataObjects>
    <PointSet name="SET_ARMAprice_in">
      <Input>scaling_price</Input>
      <Output>OutputPlaceHolder</Output>
    </PointSet>
    <HistorySet name="SET_ARMAprice_out">
      <Input>scaling_price</Input>
      <Output>Price</Output>
      <options>
        <pivotParameter>Time</pivotParameter>
      </options>
    </HistorySet>
    <PointSet name="SET_getCapacities_in">
      <Input>GRO_getCapacities_in_scalar</Input>
      <Output>OutputPlaceHolder</Output>
    </PointSet>
    <PointSet name="SET_getCapacities_out">
      <Input>GRO_getCapacities_in_scalar</Input>
      <Output>GRO_getCapacities_out_scalar</Output>
    </PointSet>
    <PointSet name="SET_dispatch_in">
      <Input>GRO_dispatch_in_scalar</Input>
      <Output>OutputPlaceHolder</Output>
    </PointSet>
    <DataSet name="SET_dispatch_out">
      <Input>GRO_dispatch_in_scalar, GRO_dispatch_in_Time</Input>
      <Output>GRO_dispatch_out_Time</Output>
      <Index var="Time">GRO_dispatch_in_Time, GRO_dispatch_out_Time</Index>
    </DataSet>
    <PointSet name="SET_CashFlowPreP_in">
      <Input>GRO_CashFlowPreP_in_scalar</Input>
      <Output>OutputPlaceHolder</Output>
    </PointSet>
    <DataSet name="SET_CashFlowPreP_out">
      <Input>GRO_CashFlowPreP_in_scalar, GRO_CashFlowPreP_in_Time</Input>
      <Output>GRO_CashFlowPreP_out_scalar</Output>
      <Index var="Time">GRO_CashFlowPreP_in_Time</Index>
    </DataSet>
    <PointSet name="SET_CashFlow_in">
      <Input>GRO_CashFlow_in_scalar</Input>
      <Output>OutputPlaceHolder</Output>
    </PointSet>
    <PointSet name="SET_CashFlow_out">
      <Input>GRO_CashFlow_in_scalar</Input>
      <Output>GRO_CashFlow_out_scalar</Output>
    </PointSet>
    <PointSet name="SET_All_out">
      <Input>GRO_CashFlow_in_scalar</Input>
      <Output>GRO_CashFlow_out_scalar</Output>
    </PointSet>
    <PointSet name="SET_IRR_out">
      <Input>BOP_capacity, IP_capacity, PriceH2</Input>
      <Output>IRR, NPV, PI, IP_capa_fact, BOP_capa_fact, BOP_TOT_revenueEL, IP_TOT_revenueBY, IP_TOT_productionBY, IP_TOT_costEL, IP_TOT_usedEL, CAPEX_tot, CAPEX_split </Output>
    </PointSet>
    <PointSet name="optOutput">
      <Input> CAPEX_tot, CAPEX_split </Input>
      <Output>NPV, BOP_capacity, IP_capacity </Output>
    </PointSet>
    <PointSet name="optData">
      <Input>trajID</Input>
      <Output>BOP_capacity, IP_capacity, NPV, CAPEX_tot, CAPEX_split</Output>
    </PointSet>
  </DataObjects>

  <Steps>
    <IOStep name="read_ARMAprice">
      <Input class="Files" type="">f_ARMAprice</Input>
      <Output class="Models" type="ROM">ARMA_price</Output>
    </IOStep>
    <MultiRun name="OPTrun" pauseAtEnd="True">
      <Input          class="DataObjects"   type="PointSet">SET_ARMAprice_in</Input>
      <Input          class="DataObjects"   type="PointSet">SET_getCapacities_in</Input>
      <Input          class="DataObjects"   type="PointSet">SET_dispatch_in</Input>
      <Input          class="DataObjects"   type="PointSet">SET_CashFlowPreP_in</Input>
      <Input          class="DataObjects"   type="PointSet">SET_CashFlow_in</Input>
      <Model          class="Models"        type="EnsembleModel">MyEnsemble</Model>
      <Optimizer      class="Optimizers"    type="SPSA">opt_smp</Optimizer>
      <SolutionExport class="DataObjects"   type="PointSet">optData</SolutionExport>
      <Output         class="DataObjects"   type="PointSet">optOutput</Output>
    </MultiRun>
    <IOStep name="printTOfile">
     <Input          class="DataObjects"   type="PointSet">optOutput</Input>
     <Input          class="DataObjects"   type="PointSet">optData</Input>
     <Output         class="OutStreams"    type="Print">dumpCSV</Output>
     <Output         class="OutStreams"    type="Print">dumpCSVall</Output>
     <Output         class="OutStreams"    type="Plot">optimizationPoints</Output>
     <Output         class="OutStreams"    type="Plot">optimizationTrajectory</Output>
    </IOStep>
  </Steps>

  <OutStreams>
    <Print name="dumpAll">
      <type>csv</type>
      <source>SET_IRR_out</source>
    </Print>
    <Print name="dumpCSV">
      <type>csv</type>
      <source>optData</source>
    </Print>
    <Print name="dumpCSVall">
      <type>csv</type>
      <source>optOutput</source>
    </Print>
    <Plot  name="optimizationPoints" overwrite="true" verbosity="silent">
      <plotSettings>
        <plot>
          <type>scatter</type>
          <x>optOutput|Input|IP_capacity</x>
          <y>optOutput|Input|BOP_capacity</y>
          <z>optOutput|Output|NPV</z>
        </plot>
        <xlabel>IP_capacity (W)</xlabel>
        <ylabel>Reactor (W)</ylabel>
        <zlabel>NPV</zlabel>
      </plotSettings>
      <actions>
        <how>png</how>
        <title>
          <text>Optimization Points</text>
        </title>
      </actions>
    </Plot>
    <Plot  name="optimizationTrajectory" overwrite="true" verbosity="silent">
        <plotSettings>
            <plot>
                <type>scatter</type>
                <x>optData|Output|CAPEX_split</x>
                <y>optData|Output|CAPEX_tot</y>
                <z>optData|Output|NPV</z>
            </plot>
            <xlabel>CAPEX_split</xlabel>
            <ylabel>CAPEX_tot</ylabel>
            <zlabel>NPV</zlabel>
        </plotSettings>
        <actions>
            <how>png</how>
            <title>
                <text>Optimization Trajectory</text>
            </title>
        </actions>
    </Plot>
  </OutStreams>

  <Optimizers>
    <SPSA name="opt_smp">
      <initialization>
        <limit>10000</limit>
        <type>max</type>
        <initialSeed>30</initialSeed>
      </initialization>
      <TargetEvaluation class="DataObjects" type="PointSet">optOutput</TargetEvaluation>
      <convergence>
        <iterationLimit>400</iterationLimit>
        <relativeThreshold>1.1E-3</relativeThreshold>
        <gradientThreshold>1E-4</gradientThreshold>
        <absoluteThreshold>1e-5</absoluteThreshold>
      </convergence>
      <parameter>
        <numGradAvgIterations>11</numGradAvgIterations>
      </parameter>
      <variable name="CAPEX_tot">
        <upperBound>3e10</upperBound>
        <lowerBound>1</lowerBound>
        <initial>1e10</initial>
      </variable>
      <variable name="CAPEX_split">
        <upperBound>1</upperBound>
        <lowerBound>0</lowerBound>
        <initial>0.5</initial>
      </variable>
      <constant name="scaling_price">1.0</constant>
      <constant name="IP_econo_of_scale"> 1.0 </constant> <!-- this should be the same as in the Cash_Flow_input.xml -->
      <constant name="PriceH2"      >2.0</constant>  <!-- in $/kg -->
      <objectVar>NPV</objectVar>
    </SPSA>
  </Optimizers>
</Simulation>
